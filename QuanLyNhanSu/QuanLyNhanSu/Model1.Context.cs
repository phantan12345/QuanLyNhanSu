//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyNhanSu
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NhanSuEntities : DbContext
    {
        public NhanSuEntities()
            : base("name=NhanSuEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BangCong> BangCong { get; set; }
        public virtual DbSet<BangLuong> BangLuong { get; set; }
        public virtual DbSet<BaoHiem> BaoHiem { get; set; }
        public virtual DbSet<NhanVien> NhanVien { get; set; }
        public virtual DbSet<PhongBan> PhongBan { get; set; }
        public virtual DbSet<TangLuong> TangLuong { get; set; }
    
        public virtual ObjectResult<proc_logic_Result> proc_logic(string user, string pass, Nullable<bool> role)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_logic_Result>("proc_logic", userParameter, passParameter, roleParameter);
        }
    
        public virtual ObjectResult<proc_login_Result> proc_login(string user, string pass)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_login_Result>("proc_login", userParameter, passParameter);
        }
    }
}
